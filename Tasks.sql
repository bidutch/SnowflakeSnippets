-- create the table

CREATE OR REPLACE TABLE DEMO_DB.PUBLIC.CREDITS (
	SLEUTEL NUMBER(19,0),
	DATE DATE,
	SERVICE_TYPE VARCHAR(25),
	WAREHOUSE VARCHAR(16777216),
	CREDITS_COMPUTE NUMBER(38,9),
	CREDITS_CLOUD_SERVICES NUMBER(38,9),
	CREDITS_TOTAL NUMBER(38,9)
);

-- compose the source query

SELECT
 DATE(START_TIME) AS DATE
        ,SERVICE_TYPE
        ,NAME AS WAREHOUSE  
        ,SUM(CREDITS_USED_COMPUTE) AS CREDITS_COMPUTE
        ,SUM(CREDITS_USED_CLOUD_SERVICES) AS CREDITS_CLOUD_SERVICES
        ,SUM(CREDITS_USED) AS CREDITS_TOTAL
      FROM SNOWFLAKE.ACCOUNT_USAGE.METERING_HISTORY
      GROUP BY DATE, SERVICE_TYPE, WAREHOUSE;

-- create the task:

CREATE OR REPLACE TASK DEMO_DB.PUBLIC.TASK_INSERT_METERING 
WAREHOUSE = COMPUTE_WH
SCHEDULE = '20 MINUTE'
AS
 INSERT INTO DEMO_DB.PUBLIC.Credits
 ("DATE"
 , "SERVICE_TYPE"
 , "WAREHOUSE"
 , "CREDITS_COMPUTE"
 , "CREDITS_CLOUD_SERVICES"
 , "CREDITS_TOTAL"
 )
 SELECT
 DATE(START_TIME) AS DATE
        ,SERVICE_TYPE
        ,NAME AS WAREHOUSE  
        ,SUM(CREDITS_USED_COMPUTE) AS CREDITS_COMPUTE
        ,SUM(CREDITS_USED_CLOUD_SERVICES) AS CREDITS_CLOUD_SERVICES
        ,SUM(CREDITS_USED) AS CREDITS_TOTAL
      FROM SNOWFLAKE.ACCOUNT_USAGE.METERING_HISTORY
      GROUP BY DATE, SERVICE_TYPE, WAREHOUSE;

-- See what tasks we have in Snowflake

SHOW TASKS;

-- Resume the task

ALTER TASK DEMO_DB.PUBLIC.TASK_INSERT_METERING RESUME;

-- Get the DDL for a task

SELECT GET_DDL('TASK', 'TASK_INSERT_METERING');

-- See the task history

SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY());
SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.TASK_HISTORY;

-- See suspended tasks using SHOW TASKS

SHOW TASKS;
SELECT * FROM TABLE(RESULT_SCAN(LAST_QUERY_ID())) WHERE "state" = 'suspended';

-- Create a task with 2 queries

CREATE OR REPLACE TASK DEMO_DB.PUBLIC.TASK_SHOW_SUSPENDED 
WAREHOUSE = COMPUTE_WH
SCHEDULE = '20 MINUTE'
AS
 SHOW TASKS;
 SELECT * FROM TABLE(RESULT_SCAN(LAST_QUERY_ID())) WHERE "state" = 'suspended';

-- Resume this task

ALTER TASK TASK_SHOW_SUSPENDED RESUME;

-- Create a second task with the RESULT_SCAN

CREATE OR REPLACE TASK DEMO_DB.PUBLIC.TASK_RESULT_SCAN 
WAREHOUSE = COMPUTE_WH
AFTER TASK_SHOW_SUSPENDED
AS
 SELECT * FROM TABLE(RESULT_SCAN(LAST_QUERY_ID())) WHERE "state" = 'suspended';

-- Suspend a task

ALTER TASK TASK_SHOW_SUSPENDED SUSPEND;

-- Suspend a chain of tasks

ALTER TASK TASK_SHOW_SUSPENDED SUSPEND;
ALTER TASK TASK_RESULT_SCAN SUSPEND;

-- Resume the chain of tasks

ALTER TASK TASK_RESULT_SCAN RESUME;
ALTER TASK TASK_SHOW_SUSPENDED RESUME;